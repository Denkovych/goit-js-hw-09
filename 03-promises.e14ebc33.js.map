{"version":3,"sources":["js/03-promises.js"],"names":["FORM","document","querySelector","AMOUNT","DELAY","STEP","createPromise","position","delay","Promise","Fulfilled","Rejected","Math","random","addEventListener","e","preventDefault","amount","Number","value","stepDelay","firstDelay","c","x","setInterval","then","console","log","catch"],"mappings":";AACA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKE,cAAc,mBAC5BE,EAAQJ,EAAKE,cAAc,kBAC3BG,EAAOL,EAAKE,cAAc,iBAgChC,SAASI,EAAcC,EAAUC,GAE1B,OAAA,IAAIC,QAAS,CAACC,EAAWC,KACLC,KAAKC,SAAW,GAGrCH,EAAW,CAACH,SAAAA,EAAUC,MAAAA,IAGxBG,EAAU,CAACJ,SAAAA,EAAUC,MAAAA,MAtCzBR,EAAKc,iBAAiB,SAAUC,IAChCA,EAAEC,iBACMC,MAAAA,EAASC,OAAOf,EAAOgB,OACzBC,IAAAA,EAAYF,OAAOb,EAAKc,OACxBE,EAAaH,OAAOd,EAAMe,OAE1BG,EAAI,EACJC,EAAI,EAEVC,YAAY,KAEPD,GAAAA,IAAMN,EACT,OAECX,EAAciB,GAAG,EADPF,EAAWD,EAAUE,GAE7BG,KAAK,EAAGlB,SAAAA,EAAUC,MAAAA,MACjBkB,QAAQC,2BAA2BpB,QAAeC,SAEnDoB,MAAM,EAAGrB,SAAAA,EAAUC,MAAAA,MAClBkB,QAAQC,0BAA0BpB,QAAeC,SAGnDc,GAAG,GAdMD,EAAWD,EAAUE","file":"03-promises.e14ebc33.js","sourceRoot":"../src","sourcesContent":["\r\nconst FORM = document.querySelector('.form')\r\nconst AMOUNT = FORM.querySelector('[name = amount]')\r\nconst DELAY = FORM.querySelector('[name = delay]')\r\nconst STEP = FORM.querySelector('[name = step]')\r\n\r\n\r\nFORM.addEventListener('submit',(e)=>{\r\ne.preventDefault();\r\n  const amount = Number(AMOUNT.value);\r\n  let stepDelay = Number(STEP.value);\r\n  let firstDelay = Number(DELAY.value);\r\n  \r\n  let c = 0;\r\n  let x = 0;\r\n  let step = firstDelay+stepDelay*c;\r\nsetInterval(() => {\r\n      \r\n  if(x === amount){\r\n  return }\r\n  let step = firstDelay+stepDelay*c;\r\n   createPromise(x+=1, step)\r\n    .then(({ position, delay }) => {\r\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\r\n    })\r\n    .catch(({ position, delay }) => {\r\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\r\n    });\r\n\r\n    c+=1;\r\n    \r\n    }, step);\r\n})\r\n\r\n\r\n\r\nfunction createPromise(position, delay) {\r\n  \r\nreturn new Promise ((Fulfilled, Rejected )=>\r\n    {const shouldResolve = Math.random() > 0.3;\r\n  \r\n    if (shouldResolve) {\r\n      Fulfilled ({position, delay});\r\n     \r\n    } else {\r\n    Rejected ({position, delay});\r\n  } })\r\n}\r\n\r\n\r\n\r\n"]}